//
// Generated on Fri Aug 29 09:02:00 2003 by xCalibrate v9.3_5.1 Mon Aug 4 13:54:35 PDT 2003
//
// Comments: 
// $RCSfile: SmicSP6.1P_xcal018_log_1p3m.rc,v $
// $Revision: 1.3 $
// $Date: 2003/09/03 02:09:03 $
// Spice Model:TD-LO18-SP-2001 Rev.: 6.1P
//
// Technology name: SmicSP6.1P_xcal018_log_1p3m
// Precision: 1000
// DBU Size: 1e-09
// DB Magnification: 1
// Capacitance Units: ff
// Background Dielectric: 1
// Stacking Mode: Unconditional
//
// Following line(s) should be in your rulesfile
// UNIT CAPACITANCE ff
// Above line(s) should be in your rulesfile
//
// 
// Background dielectric = 1
// 
// Profile = field
// Layers =  (field_base field_base_diel poly poly_diel poly_diel2 M1 M1_diel M1_diel2 M2 M2_diel M2_diel2 M3 M3_diel M3_diel2)
// 
//     Z-COORD              NAME TYPE THICKNESS   DIEL   WIDTH   SPACE           NONPLANAR DIELECTRIC PARMS
//                                                                          TYPE HEIGHT SWTHK   SWSLOPE  GAP  MIN   TYPE
//                                                                                                       TYPE GAP  PARMS
//  --- 5.8000  ------------------------------------------------------------------------------------------------------------------
//  |                   M3_diel2   D    0.6000   7.9000      
//  --- 5.2000  ------------------------------------------------------------------------------------------------------------------
//  |                    M3_diel   D    0.1600   4.2000      
//  --- 5.0400  ------------------------------------------------------------------------------------------------------------------
//  |                         M3   C    0.9900           0.4400  0.4600 
//  --- 4.0500  ------------------------------------------------------------------------------------------------------------------
//  |                   M2_diel2   D    0.3500   4.2000      
//  --- 3.7000  ------------------------------------------------------------------------------------------------------------------
//  |                    M2_diel   D    0.6500   3.7000      
//  --- 3.0500  ------------------------------------------------------------------------------------------------------------------
//  |                         M2   C    0.5300           0.2800  0.2800 
//  --- 2.5200  ------------------------------------------------------------------------------------------------------------------
//  |                   M1_diel2   D    0.2000   4.2000      
//  --- 2.3200  ------------------------------------------------------------------------------------------------------------------
//  |                    M1_diel   D    0.6500   3.7000      
//  --- 1.6700  ------------------------------------------------------------------------------------------------------------------
//  |                         M1   C    0.5300           0.2300  0.2300 
//  --- 1.1400  ------------------------------------------------------------------------------------------------------------------
//  |                 poly_diel2   D    0.7500   4.2000      
//  --- 0.3900  ------------------------------------------------------------------------------------------------------------------
// 
//  --- 0.5900  ------------------------------------------------------------------------------------------------------------------
//  |   0.3900         poly_diel   D    0.0400   4.3000                      C  0.2400   0.0400  90.0000                                               
//  --- 0.3500  ------------------------------------------------------------------------------------------------------------------
// 
//  --- 0.5500  ------------------------------------------------------------------------------------------------------------------
//  |                       poly   C    0.2000           0.1800  0.2500 
//  --- 0.3500  ------------------------------------------------------------------------------------------------------------------
//  |            field_base_diel   D    0.3500   4.0000      
//  --- 0.0000  ------------------------------------------------------------------------------------------------------------------
//  |                 field_base   B    1.0000
//  --- -1.0000 ------------------------------------------------------------------------------------------------------------------
// 
//  ===========================
//  Non-planar Z coordinate map
//  ===========================
// 
//  --- 5.8000 ---------------------------------------------------------------------------------------------------------------------------------------------
//                    M3_diel2 (7.9000)
//  --- 5.2000 ---------------------------------------------------------------------------------------------------------------------------------------------
//                     M3_diel (4.2000)
//  --- 5.0400 ---------------------------------------------------------------------------------------------------------------------------------------------
//                     M3_diel (4.2000)                       M3
//  --- 4.0500 ---------------------------------------------------------------------------------------------------------------------------------------------
//                    M2_diel2 (4.2000)                         
//  --- 3.7000 ---------------------------------------------------------------------------------------------------------------------------------------------
//                     M2_diel (3.7000)                         
//  --- 3.0500 ---------------------------------------------------------------------------------------------------------------------------------------------
//                     M2_diel (3.7000)                       M2
//  --- 2.5200 ---------------------------------------------------------------------------------------------------------------------------------------------
//                    M1_diel2 (4.2000)                         
//  --- 2.3200 ---------------------------------------------------------------------------------------------------------------------------------------------
//                     M1_diel (3.7000)                         
//  --- 1.6700 ---------------------------------------------------------------------------------------------------------------------------------------------
//                     M1_diel (3.7000)                       M1
//  --- 1.1400 ---------------------------------------------------------------------------------------------------------------------------------------------
//                  poly_diel2 (4.2000)                         
//  --- 0.5900 ---------------------------------------------------------------------------------------------------------------------------------------------
//                  poly_diel2 (4.2000)       poly_diel (4.3000)
//  --- 0.5500 ---------------------------------------------------------------------------------------------------------------------------------------------
//                  poly_diel2 (4.2000)       poly_diel (4.3000)                     poly
//  --- 0.3900 ---------------------------------------------------------------------------------------------------------------------------------------------
//                                            poly_diel (4.3000)                     poly
//  --- 0.3500 ---------------------------------------------------------------------------------------------------------------------------------------------
//             field_base_diel (4.0000)                                                  
//  --- 0.0000 ---------------------------------------------------------------------------------------------------------------------------------------------
//                           field_base                                                  
// 
// Background dielectric = 1
// 
// Profile = active
// Layers =  (active_base active_base_diel poly_diel2 M1 M1_diel M1_diel2 M2 M2_diel M2_diel2 M3 M3_diel M3_diel2)
// 
//     Z-COORD              NAME TYPE THICKNESS   DIEL   WIDTH   SPACE  
//                                                                
//  --- 5.4500  ---------------------------------------------------
//  |                   M3_diel2   D    0.6000   7.9000      
//  --- 4.8500  ---------------------------------------------------
//  |                    M3_diel   D    0.1600   4.2000      
//  --- 4.6900  ---------------------------------------------------
//  |                         M3   C    0.9900           0.4400  0.4600 
//  --- 3.7000  ---------------------------------------------------
//  |                   M2_diel2   D    0.3500   4.2000      
//  --- 3.3500  ---------------------------------------------------
//  |                    M2_diel   D    0.6500   3.7000      
//  --- 2.7000  ---------------------------------------------------
//  |                         M2   C    0.5300           0.2800  0.2800 
//  --- 2.1700  ---------------------------------------------------
//  |                   M1_diel2   D    0.2000   4.2000      
//  --- 1.9700  ---------------------------------------------------
//  |                    M1_diel   D    0.6500   3.7000      
//  --- 1.3200  ---------------------------------------------------
//  |                         M1   C    0.5300           0.2300  0.2300 
//  --- 0.7900  ---------------------------------------------------
//  |                 poly_diel2   D    0.7500   4.2000      
//  --- 0.0400  ---------------------------------------------------
//  |           active_base_diel   D    0.0400   4.3000      
//  --- 0.0000  ---------------------------------------------------
//  |                active_base   B    1.0000
//  --- -1.0000 ---------------------------------------------------
//
//  model: 2  target: intrinsicp  profile: field  layers: field_base,poly
//
CAPACITANCE INTRINSIC PLATE poly MASK
[
    PROPERTY C
    C = 0.101189 * area()
]
//
//  model: 2  target: intrinsicp  profile: field  layers: field_base,M1
//
CAPACITANCE INTRINSIC PLATE M1 MASK
[
    PROPERTY C
    C = 0.0321533 * area()
]
//
//  model: 2  target: intrinsicp  profile: field  layers: field_base,M2
//
CAPACITANCE INTRINSIC PLATE M2 MASK
[
    PROPERTY C
    C = 0.0137954 * area()
]
//
//  model: 2  target: intrinsicp  profile: field  layers: field_base,M3
//
CAPACITANCE INTRINSIC PLATE M3 MASK
[
    PROPERTY C
    C = 0.00848176 * area()
]
//
//  model: 34  target: intrinsic  profile: field  layers: field_base,poly
//
CAPACITANCE INTRINSIC FRINGE poly MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_distance = 3
    C = 0.0
    if (distance() > 0.0) {
        C = length() * 0.0447421 * (1 - exp(-1.42309 * (distance() + 0.0955733)))
    }
    if (distance() <= 0.0) {
        C = length() * 0.0465259
    }
]
//
//  model: 34  target: nearbody  profile: field  layers: field_base,poly
//
CAPACITANCE NEARBODY poly WITH SHIELD poly MASK
[
    PROPERTY C
    max_calwidth = 0.72 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-3.48507 - 1.57192 * (distance())) + 0.00953265 / pow(distance() , 1.10565)) * 1.0984 * pow((width1() + width2()) / 2 , 0.167349)
]
//
//  model: 34  target: intrinsic  profile: field  layers: field_base,M1
//
CAPACITANCE INTRINSIC FRINGE M1 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_distance = 3
    C = 0.0
    if (distance() > 0.0) {
        C = length() * 0.0367617 * (1 - exp(-0.585581 * (distance() + 0.218269)))
    }
    if (distance() <= 0.0) {
        C = length() * 0.0396831
    }
]
//
//  model: 34  target: nearbody  profile: field  layers: field_base,M1
//
CAPACITANCE NEARBODY M1 WITH SHIELD M1 MASK
[
    PROPERTY C
    max_calwidth = 0.92 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-3.76523 - 0.809631 * (distance())) + 0.0206672 / pow(distance() , 0.954602)) * 1.25844 * pow((width1() + width2()) / 2 , 0.113102)
]
//
//  model: 34  target: intrinsic  profile: field  layers: field_base,M2
//
CAPACITANCE INTRINSIC FRINGE M2 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_distance = 3
    C = 0.0
    if (distance() > 0.0) {
        C = length() * 0.0269672 * (1 - exp(-0.350593 * (distance() + 0.54217)))
    }
    if (distance() <= 0.0) {
        C = length() * 0.0307886
    }
]
//
//  model: 34  target: nearbody  profile: field  layers: field_base,M2
//
CAPACITANCE NEARBODY M2 WITH SHIELD M2 MASK
[
    PROPERTY C
    max_calwidth = 1.12 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-4.5433 - 0.38268 * (distance())) + 0.0179781 / pow(distance() , 0.859896)) * 1.86038 * pow((width1() + width2()) / 2 , 0.140148)
]
//
//  model: 34  target: intrinsic  profile: field  layers: field_base,M3
//
CAPACITANCE INTRINSIC FRINGE M3 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_distance = 3
    C = 0.0
    if (distance() > 0.0) {
        C = length() * 0.0400416 * (1 - exp(-0.0969959 * (distance() + 1.01791)))
    }
    if (distance() <= 0.0) {
        C = length() * 0.029623
    }
]
//
//  model: 34  target: nearbody  profile: field  layers: field_base,M3
//
CAPACITANCE NEARBODY M3 WITH SHIELD M3 MASK
[
    PROPERTY C
    max_calwidth = 1.76 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-3.77175 - 0.341998 * (distance())) + 0.0375454 / pow(distance() , 0.890349)) * 1.45668 * pow((width1() + width2()) / 2 , 0.105645)
]
//
//  model: 3  target: crossoverp  profile: field  layers: field_base,poly,M1
//
CAPACITANCE CROSSOVER PLATE poly M1 MASK
[
    PROPERTY C
    C = 0.0631282 * area()
]
//
//  model: 3  target: crossoverp  profile: field  layers: field_base,poly,M2
//
CAPACITANCE CROSSOVER PLATE poly M2 MASK
[
    PROPERTY C
    C = 0.0174751 * area()
]
//
//  model: 3  target: crossoverp  profile: field  layers: field_base,poly,M3
//
CAPACITANCE CROSSOVER PLATE poly M3 MASK
[
    PROPERTY C
    C = 0.00974423 * area()
]
//
//  model: 3  target: crossoverp  profile: field  layers: field_base,M1,M2
//
CAPACITANCE CROSSOVER PLATE M1 M2 MASK
[
    PROPERTY C
    C = 0.0396568 * area()
]
//
//  model: 3  target: crossoverp  profile: field  layers: field_base,M1,M3
//
CAPACITANCE CROSSOVER PLATE M1 M3 MASK
[
    PROPERTY C
    C = 0.0141589 * area()
]
//
//  model: 3  target: crossoverp  profile: field  layers: field_base,M2,M3
//
CAPACITANCE CROSSOVER PLATE M2 M3 MASK
[
    PROPERTY C
    C = 0.0341886 * area()
]
//
//  model: 36  target: nearbody  profile: field  layers: field_base,poly,M1
//
CAPACITANCE NEARBODY poly INSIDE OF M1 MASK
[
    PROPERTY C
    max_calwidth = 0.72 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-2.60987 - 2.84083 * (distance())) + 0.00081035 / pow(distance() , 2.00194)) * 1.08765 * pow((width1() + width2()) / 2 , 0.051773)
]
//
//  model: 36  target: crossovere  profile: field  layers: field_base,poly,M1
//
CAPACITANCE CROSSOVER FRINGE poly M1 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_calenclose = 5 // For reference
    max_distance = 3
    max_enclose = 3
    C = 0.0
    if ((distance() > 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0199107 * (1 - exp(-2.31306 * (distance() + -0.0387583)))
    }
    if ((distance() <= 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0205139
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() < distance())) {
        C = length() * 0.5 * (-0.00609637 * (distance()) + 0.505875) * (0.0815985 - exp(-(-0.762271 * (distance()) + 0.514084) * (enclose() + 4.0169 * (distance()) + 3.65511) - (0.00244682 * (distance()) + 0.143963) * (enclose() + 4.25741 * (distance()) + 1.56215) * (enclose() + 4.25741 * (distance()) + 1.56215)))
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() >= distance())) {
        C = length() * 0.0199107 * (1 - exp(-2.31306 * (distance() + -0.0387583)))
    }
    if ((distance() <= 0.0) && (enclose() < max_enclose)) {
        C = length() * 0.237697 * (0.0815985 - exp(3.29727 * (enclose() + 23.7396) - 0.156197 * (enclose() + 22.8492) * (enclose() + 22.8492)))
    }
    if (C < 0.0) {
        C = 0
    }
]
//
//  model: 36  target: intrinsic  profile: field  layers: field_base,poly,M1
//
CAPACITANCE INTRINSIC FRINGE poly INSIDE OF M1 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_distance = 3
    C = 0.0
    if (distance() > 0.0) {
        C = length() * 0.029291 * (1 - exp(-2.37105 * (distance() + -0.0340882)))
    }
    if (distance() <= 0.0) {
        C = length() * 0.0300754
    }
]
//
//  model: 36  target: nearbody  profile: field  layers: field_base,poly,M2
//
CAPACITANCE NEARBODY poly INSIDE OF M2 MASK
[
    PROPERTY C
    max_calwidth = 0.72 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-2.96597 - 1.75029 * (distance())) + 0.00351111 / pow(distance() , 1.50799)) * 1.07166 * pow((width1() + width2()) / 2 , 0.128418)
]
//
//  model: 36  target: crossovere  profile: field  layers: field_base,poly,M2
//
CAPACITANCE CROSSOVER FRINGE poly M2 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_calenclose = 5 // For reference
    max_distance = 3
    max_enclose = 3
    C = 0.0
    if ((distance() > 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.00797071 * (1 - exp(-1.47303 * (distance() + 0.0504606)))
    }
    if ((distance() <= 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0084109
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() < distance())) {
        C = length() * 0.5 * (-0.0010432 * (distance()) + 0.034308) * (0.525893 - exp(-(0.175137 * (distance()) + 0.331035) * (enclose() + 0.26752 * (distance()) + 1.41334) - (0.00096795 * (distance()) + -0.0208458) * (enclose() + -2.4437 * (distance()) + 0.825626) * (enclose() + -2.4437 * (distance()) + 0.825626)))
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() >= distance())) {
        C = length() * 0.00797071 * (1 - exp(-1.47303 * (distance() + 0.0504606)))
    }
    if ((distance() <= 0.0) && (enclose() < max_enclose)) {
        C = length() * 0.014546 * (0.525893 - exp(-1.20672 * (enclose() + 2.75094) - -0.0160061 * (enclose() + -11.3929) * (enclose() + -11.3929)))
    }
    if (C < 0.0) {
        C = 0
    }
]
//
//  model: 36  target: intrinsic  profile: field  layers: field_base,poly,M2
//
CAPACITANCE INTRINSIC FRINGE poly INSIDE OF M2 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_distance = 3
    C = 0.0
    if (distance() > 0.0) {
        C = length() * 0.0378327 * (1 - exp(-1.56558 * (distance() + 0.0506278)))
    }
    if (distance() <= 0.0) {
        C = length() * 0.0396053
    }
]
//
//  model: 36  target: nearbody  profile: field  layers: field_base,poly,M3
//
CAPACITANCE NEARBODY poly INSIDE OF M3 MASK
[
    PROPERTY C
    max_calwidth = 0.72 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-3.14675 - 1.55369 * (distance())) + 0.0058944 / pow(distance() , 1.32561)) * 1.04181 * pow((width1() + width2()) / 2 , 0.149458)
]
//
//  model: 36  target: crossovere  profile: field  layers: field_base,poly,M3
//
CAPACITANCE CROSSOVER FRINGE poly M3 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_calenclose = 5 // For reference
    max_distance = 3
    max_enclose = 3
    C = 0.0
    if ((distance() > 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.00484572 * (1 - exp(-1.37147 * (distance() + 0.0777039)))
    }
    if ((distance() <= 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.00519038
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() < distance())) {
        C = length() * 0.5 * (-0.00074906 * (distance()) + 0.0184117) * (0.635207 - exp(-(0.0821996 * (distance()) + 0.158277) * (enclose() + 0.727237 * (distance()) + 2.05205) - (0.00015914 * (distance()) + -0.0117822) * (enclose() + -2.60494 * (distance()) + -1.0805) * (enclose() + -2.60494 * (distance()) + -1.0805)))
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() >= distance())) {
        C = length() * 0.00484572 * (1 - exp(-1.37147 * (distance() + 0.0777039)))
    }
    if ((distance() <= 0.0) && (enclose() < max_enclose)) {
        C = length() * 0.0073332 * (0.635207 - exp(-0.569275 * (enclose() + 5.68824) - -0.0109865 * (enclose() + -14.1052) * (enclose() + -14.1052)))
    }
    if (C < 0.0) {
        C = 0
    }
]
//
//  model: 36  target: intrinsic  profile: field  layers: field_base,poly,M3
//
CAPACITANCE INTRINSIC FRINGE poly INSIDE OF M3 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_distance = 3
    C = 0.0
    if (distance() > 0.0) {
        C = length() * 0.0404 * (1 - exp(-1.46203 * (distance() + 0.0752315)))
    }
    if (distance() <= 0.0) {
        C = length() * 0.0428709
    }
]
//
//  model: 36  target: nearbody  profile: field  layers: field_base,M1,M2
//
CAPACITANCE NEARBODY M1 INSIDE OF M2 MASK
[
    PROPERTY C
    max_calwidth = 0.92 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-3.13195 - 1.45236 * (distance())) + 0.00322025 / pow(distance() , 1.53263)) * 1.88438 * pow((width1() + width2()) / 2 , 0.0606882)
]
//
//  model: 36  target: crossovere  profile: field  layers: field_base,M1,M2
//
CAPACITANCE CROSSOVER FRINGE M1 M2 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_calenclose = 5 // For reference
    max_distance = 3
    max_enclose = 3
    C = 0.0
    if ((distance() > 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0258034 * (1 - exp(-0.963735 * (distance() + 0.0105399)))
    }
    if ((distance() <= 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0262543
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() < distance())) {
        C = length() * 0.5 * (-7.63146e-05 * (distance()) + 0.354934) * (0.139987 - exp(-(-0.0514965 * (distance()) + 0.0499135) * (enclose() + 5.3652 * (distance()) + 11.3631) - (0.0160671 * (distance()) + 0.0291306) * (enclose() + 0.671028 * (distance()) + 6.46531) * (enclose() + 0.671028 * (distance()) + 6.46531)))
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() >= distance())) {
        C = length() * 0.0258034 * (1 - exp(-0.963735 * (distance() + 0.0105399)))
    }
    if ((distance() <= 0.0) && (enclose() < max_enclose)) {
        C = length() * 0.177276 * (0.139987 - exp(0.207569 * (enclose() + 38.1891) - 0.109466 * (enclose() + 9.82045) * (enclose() + 9.82045)))
    }
    if (C < 0.0) {
        C = 0
    }
]
//
//  model: 36  target: intrinsic  profile: field  layers: field_base,M1,M2
//
CAPACITANCE INTRINSIC FRINGE M1 INSIDE OF M2 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_distance = 3
    C = 0.0
    if (distance() > 0.0) {
        C = length() * 0.0221724 * (1 - exp(-0.929146 * (distance() + 0.0172436)))
    }
    if (distance() <= 0.0) {
        C = length() * 0.0225725
    }
]
//
//  model: 36  target: nearbody  profile: field  layers: field_base,M1,M3
//
CAPACITANCE NEARBODY M1 INSIDE OF M3 MASK
[
    PROPERTY C
    max_calwidth = 0.92 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-3.14574 - 1.02968 * (distance())) + 0.00782339 / pow(distance() , 1.28872)) * 1.45526 * pow((width1() + width2()) / 2 , 0.0903216)
]
//
//  model: 36  target: crossovere  profile: field  layers: field_base,M1,M3
//
CAPACITANCE CROSSOVER FRINGE M1 M3 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_calenclose = 5 // For reference
    max_distance = 3
    max_enclose = 3
    C = 0.0
    if ((distance() > 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0140383 * (1 - exp(-0.625982 * (distance() + 0.116657)))
    }
    if ((distance() <= 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0142609
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() < distance())) {
        C = length() * 0.5 * (0.00010114 * (distance()) + 0.0320731) * (0.838795 - exp(-(0.308584 * (distance()) + 0.215723) * (enclose() + 0.291444 * (distance()) + 0.6302) - (-0.00863248 * (distance()) + -0.0274183) * (enclose() + 0.966829 * (distance()) + 1.53796) * (enclose() + 0.966829 * (distance()) + 1.53796)))
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() >= distance())) {
        C = length() * 0.0140383 * (1 - exp(-0.625982 * (distance() + 0.116657)))
    }
    if ((distance() <= 0.0) && (enclose() < max_enclose)) {
        C = length() * 0.0162894 * (0.838795 - exp(-1.75864 * (enclose() + 2.08742) - -0.0705807 * (enclose() + 6.37211) * (enclose() + 6.37211)))
    }
    if (C < 0.0) {
        C = 0
    }
]
//
//  model: 36  target: intrinsic  profile: field  layers: field_base,M1,M3
//
CAPACITANCE INTRINSIC FRINGE M1 INSIDE OF M3 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_distance = 3
    C = 0.0
    if (distance() > 0.0) {
        C = length() * 0.0284277 * (1 - exp(-0.662092 * (distance() + 0.10523)))
    }
    if (distance() <= 0.0) {
        C = length() * 0.0290008
    }
]
//
//  model: 36  target: nearbody  profile: field  layers: field_base,M2,M3
//
CAPACITANCE NEARBODY M2 INSIDE OF M3 MASK
[
    PROPERTY C
    max_calwidth = 1.12 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-2.92239 - 1.02501 * (distance())) + 0.00919989 / pow(distance() , 1.34482)) * 1.14425 * pow((width1() + width2()) / 2 , 0.0818193)
]
//
//  model: 36  target: crossovere  profile: field  layers: field_base,M2,M3
//
CAPACITANCE CROSSOVER FRINGE M2 M3 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_calenclose = 5 // For reference
    max_distance = 3
    max_enclose = 3
    C = 0.0
    if ((distance() > 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0290397 * (1 - exp(-0.69563 * (distance() + 0.0699356)))
    }
    if ((distance() <= 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0296202
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() < distance())) {
        C = length() * 0.5 * (-0.00108299 * (distance()) + 0.0667293) * (0.916948 - exp(-(-0.0381119 * (distance()) + 2.04538) * (enclose() + -0.147491 * (distance()) + 1.61624) - (0.0212103 * (distance()) + -0.214767) * (enclose() + -0.246216 * (distance()) + 3.95698) * (enclose() + -0.246216 * (distance()) + 3.95698)))
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() >= distance())) {
        C = length() * 0.0290397 * (1 - exp(-0.69563 * (distance() + 0.0699356)))
    }
    if ((distance() <= 0.0) && (enclose() < max_enclose)) {
        C = length() * 0.0306572 * (0.916948 - exp(-1.85482 * (enclose() + 0.878785) - -0.108716 * (enclose() + 2.7259) * (enclose() + 2.7259)))
    }
    if (C < 0.0) {
        C = 0
    }
]
//
//  model: 36  target: intrinsic  profile: field  layers: field_base,M2,M3
//
CAPACITANCE INTRINSIC FRINGE M2 INSIDE OF M3 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_distance = 3
    C = 0.0
    if (distance() > 0.0) {
        C = length() * 0.0135866 * (1 - exp(-0.644333 * (distance() + 0.0826814)))
    }
    if (distance() <= 0.0) {
        C = length() * 0.0137948
    }
]
//
//  model: 37  target: nearbody  profile: field  layers: field_base,poly,M1
//
CAPACITANCE NEARBODY M1 INSIDE OF poly MASK
[
    PROPERTY C
    max_calwidth = 0.92 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-3.88678 - 1.19746 * (distance())) + 0.0122731 / pow(distance() , 1.03775)) * 1.69447 * pow((width1() + width2()) / 2 , 0.0975138)
]
//
//  model: 37  target: crossovere  profile: field  layers: field_base,poly,M1
//
CAPACITANCE CROSSOVER FRINGE M1 poly MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_calenclose = 5 // For reference
    max_distance = 3
    max_enclose = 3
    C = 0.0
    if ((distance() > 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0450095 * (1 - exp(-0.892687 * (distance() + 0.100674)))
    }
    if ((distance() <= 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0497983
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() < distance())) {
        C = length() * 0.5 * (0.0104988 * (distance()) + 0.474016) * (0.154186 - exp(-(-0.252168 * (distance()) + 0.273747) * (enclose() + 3.30802 * (distance()) + 4.92279) - (0.00194113 * (distance()) + 0.0557949) * (enclose() + 3.25556 * (distance()) + 2.58894) * (enclose() + 3.25556 * (distance()) + 2.58894)))
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() >= distance())) {
        C = length() * 0.0450095 * (1 - exp(-0.892687 * (distance() + 0.100674)))
    }
    if ((distance() <= 0.0) && (enclose() < max_enclose)) {
        C = length() * 0.263255 * (0.154186 - exp(0.987093 * (enclose() + 21.4629) - 0.0655006 * (enclose() + 18.8667) * (enclose() + 18.8667)))
    }
    if (C < 0.0) {
        C = 0
    }
]
//
//  model: 37  target: nearbody  profile: field  layers: field_base,poly,M2
//
CAPACITANCE NEARBODY M2 INSIDE OF poly MASK
[
    PROPERTY C
    max_calwidth = 1.12 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-4.15985 - 0.485849 * (distance())) + 0.0234611 / pow(distance() , 0.877331)) * 1.35879 * pow((width1() + width2()) / 2 , 0.134572)
]
//
//  model: 37  target: crossovere  profile: field  layers: field_base,poly,M2
//
CAPACITANCE CROSSOVER FRINGE M2 poly MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_calenclose = 5 // For reference
    max_distance = 3
    max_enclose = 3
    C = 0.0
    if ((distance() > 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.029706 * (1 - exp(-0.398306 * (distance() + 0.424968)))
    }
    if ((distance() <= 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0345211
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() < distance())) {
        C = length() * 0.5 * (0.00596314 * (distance()) + 0.045259) * (0.60975 - exp(-(0.0434586 * (distance()) + 0.226021) * (enclose() + 0.00591706 * (distance()) + 1.44272) - (0.0215595 * (distance()) + -0.00011592) * (enclose() + -0.618277 * (distance()) + 3.49257) * (enclose() + -0.618277 * (distance()) + 3.49257)))
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() >= distance())) {
        C = length() * 0.029706 * (1 - exp(-0.398306 * (distance() + 0.424968)))
    }
    if ((distance() <= 0.0) && (enclose() < max_enclose)) {
        C = length() * 0.0375373 * (0.60975 - exp(-0.443314 * (enclose() + 1.47231) - 0.107682 * (enclose() + 0.401185) * (enclose() + 0.401185)))
    }
    if (C < 0.0) {
        C = 0
    }
]
//
//  model: 37  target: nearbody  profile: field  layers: field_base,poly,M3
//
CAPACITANCE NEARBODY M3 INSIDE OF poly MASK
[
    PROPERTY C
    max_calwidth = 1.76 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-3.70698 - 0.366922 * (distance())) + 0.0359574 / pow(distance() , 0.907175)) * 1.46631 * pow((width1() + width2()) / 2 , 0.103614)
]
//
//  model: 37  target: crossovere  profile: field  layers: field_base,poly,M3
//
CAPACITANCE CROSSOVER FRINGE M3 poly MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_calenclose = 5 // For reference
    max_distance = 3
    max_enclose = 3
    C = 0.0
    if ((distance() > 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0414775 * (1 - exp(-0.108167 * (distance() + 0.904342)))
    }
    if ((distance() <= 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0321137
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() < distance())) {
        C = length() * 0.5 * (0.00653326 * (distance()) + 0.0259153) * (0.60595 - exp(-(0.00129982 * (distance()) + 0.342421) * (enclose() + 0.0728529 * (distance()) + 1.44338) - (0.0173054 * (distance()) + -0.0284501) * (enclose() + -0.54486 * (distance()) + 2.80063) * (enclose() + -0.54486 * (distance()) + 2.80063)))
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() >= distance())) {
        C = length() * 0.0414775 * (1 - exp(-0.108167 * (distance() + 0.904342)))
    }
    if ((distance() <= 0.0) && (enclose() < max_enclose)) {
        C = length() * 0.0292908 * (0.60595 - exp(-0.34892 * (enclose() + 1.80764) - 0.0580769 * (enclose() + 0.07633) * (enclose() + 0.07633)))
    }
    if (C < 0.0) {
        C = 0
    }
]
//
//  model: 37  target: nearbody  profile: field  layers: field_base,M1,M2
//
CAPACITANCE NEARBODY M2 INSIDE OF M1 MASK
[
    PROPERTY C
    max_calwidth = 1.12 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-4.15764 - 0.87998 * (distance())) + 0.0141973 / pow(distance() , 0.971812)) * 1.77105 * pow((width1() + width2()) / 2 , 0.115258)
]
//
//  model: 37  target: crossovere  profile: field  layers: field_base,M1,M2
//
CAPACITANCE CROSSOVER FRINGE M2 M1 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_calenclose = 5 // For reference
    max_distance = 3
    max_enclose = 3
    C = 0.0
    if ((distance() > 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0389846 * (1 - exp(-0.677679 * (distance() + 0.160858)))
    }
    if ((distance() <= 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0439854
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() < distance())) {
        C = length() * 0.5 * (0.0371524 * (distance()) + 0.711898) * (0.0776608 - exp(-(-0.137261 * (distance()) + 0.110094) * (enclose() + 6.46882 * (distance()) + 13.1029) - (0.00034815 * (distance()) + 0.0243798) * (enclose() + 5.44543 * (distance()) + 6.18714) * (enclose() + 5.44543 * (distance()) + 6.18714)))
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() >= distance())) {
        C = length() * 0.0389846 * (1 - exp(-0.677679 * (distance() + 0.160858)))
    }
    if ((distance() <= 0.0) && (enclose() < max_enclose)) {
        C = length() * 0.44883 * (0.0776608 - exp(0.576211 * (enclose() + 45.447) - 0.0261205 * (enclose() + 33.4143) * (enclose() + 33.4143)))
    }
    if (C < 0.0) {
        C = 0
    }
]
//
//  model: 37  target: nearbody  profile: field  layers: field_base,M1,M3
//
CAPACITANCE NEARBODY M3 INSIDE OF M1 MASK
[
    PROPERTY C
    max_calwidth = 1.76 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-3.52655 - 0.429748 * (distance())) + 0.0325006 / pow(distance() , 0.963511)) * 1.45269 * pow((width1() + width2()) / 2 , 0.0978025)
]
//
//  model: 37  target: crossovere  profile: field  layers: field_base,M1,M3
//
CAPACITANCE CROSSOVER FRINGE M3 M1 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_calenclose = 5 // For reference
    max_distance = 3
    max_enclose = 3
    C = 0.0
    if ((distance() > 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0422015 * (1 - exp(-0.162959 * (distance() + 0.606589)))
    }
    if ((distance() <= 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0369876
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() < distance())) {
        C = length() * 0.5 * (0.00784556 * (distance()) + 0.032629) * (0.659095 - exp(-(-0.0376039 * (distance()) + 0.618234) * (enclose() + 0.160634 * (distance()) + 0.94027) - (0.0313433 * (distance()) + -0.0757356) * (enclose() + -0.407858 * (distance()) + 2.38747) * (enclose() + -0.407858 * (distance()) + 2.38747)))
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() >= distance())) {
        C = length() * 0.0422015 * (1 - exp(-0.162959 * (distance() + 0.606589)))
    }
    if ((distance() <= 0.0) && (enclose() < max_enclose)) {
        C = length() * 0.0359284 * (0.659095 - exp(-0.430214 * (enclose() + 1.74344) - 0.0809809 * (enclose() + 0.34818) * (enclose() + 0.34818)))
    }
    if (C < 0.0) {
        C = 0
    }
]
//
//  model: 37  target: nearbody  profile: field  layers: field_base,M2,M3
//
CAPACITANCE NEARBODY M3 INSIDE OF M2 MASK
[
    PROPERTY C
    max_calwidth = 1.76 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-3.38974 - 0.575812 * (distance())) + 0.0228036 / pow(distance() , 1.10324)) * 1.59957 * pow((width1() + width2()) / 2 , 0.0876787)
]
//
//  model: 37  target: crossovere  profile: field  layers: field_base,M2,M3
//
CAPACITANCE CROSSOVER FRINGE M3 M2 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_calenclose = 5 // For reference
    max_distance = 3
    max_enclose = 3
    C = 0.0
    if ((distance() > 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0488425 * (1 - exp(-0.363866 * (distance() + 0.243812)))
    }
    if ((distance() <= 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0503434
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() < distance())) {
        C = length() * 0.5 * (0.0057875 * (distance()) + 0.108983) * (0.601676 - exp(-(-0.0554582 * (distance()) + 1.03744) * (enclose() + 0.106542 * (distance()) + 0.758978) - (0.0516886 * (distance()) + -0.275947) * (enclose() + -0.362972 * (distance()) + 1.26839) * (enclose() + -0.362972 * (distance()) + 1.26839)))
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() >= distance())) {
        C = length() * 0.0488425 * (1 - exp(-0.363866 * (distance() + 0.243812)))
    }
    if ((distance() <= 0.0) && (enclose() < max_enclose)) {
        C = length() * 0.0689603 * (0.601676 - exp(-0.760149 * (enclose() + 1.29169) - -0.017504 * (enclose() + -0.54647) * (enclose() + -0.54647)))
    }
    if (C < 0.0) {
        C = 0
    }
]
//
//  model: 33  target: nearbody  profile: field  layers: field_base,poly,M1,M2
//
CAPACITANCE NEARBODY M1 INSIDE OF poly M2 MASK
[
    PROPERTY C
    max_calwidth = 0.92 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-2.99285 - 1.83653 * (distance())) + 0.00217753 / pow(distance() , 1.67761)) * 1.85868 * pow((width1() + width2()) / 2 , 0.0399363)
]
//
//  model: 33  target: crossovere  profile: field  layers: field_base,poly,M1,M2
//
CAPACITANCE CROSSOVER FRINGE M1 M2 INSIDE OF poly MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_calenclose = 5 // For reference
    max_distance = 3
    max_enclose = 3
    C = 0.0
    if ((distance() > 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0218763 * (1 - exp(-1.22446 * (distance() + -0.0240368)))
    }
    if ((distance() <= 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0222532
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() < distance())) {
        C = length() * 0.5 * (-0.00106549 * (distance()) + 0.127949) * (0.343531 - exp(-(-0.0248781 * (distance()) + -0.0235235) * (enclose() + 32.4196 * (distance()) + 3.5245) - (0.00109387 * (distance()) + 0.0520272) * (enclose() + 3.41607 * (distance()) + 4.28911) * (enclose() + 3.41607 * (distance()) + 4.28911)))
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() >= distance())) {
        C = length() * 0.0218763 * (1 - exp(-1.22446 * (distance() + -0.0240368)))
    }
    if ((distance() <= 0.0) && (enclose() < max_enclose)) {
        C = length() * 0.0613108 * (0.343531 - exp(0.147914 * (enclose() + 165.623) - 0.0574966 * (enclose() + 21.3695) * (enclose() + 21.3695)))
    }
    if (C < 0.0) {
        C = 0
    }
]
//
//  model: 33  target: intrinsice  profile: field  layers: field_base,poly,M1,M2
//
CAPACITANCE CROSSOVER FRINGE M1 poly INSIDE OF M2 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_calenclose = 5 // For reference
    max_distance = 3
    max_enclose = 3
    C = 0.0
    if ((distance() > 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0312459 * (1 - exp(-1.28525 * (distance() + -0.0206543)))
    }
    if ((distance() <= 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0318233
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() < distance())) {
        C = length() * 0.5 * (-0.00206331 * (distance()) + 0.157033) * (0.410216 - exp(-(-0.281205 * (distance()) + 0.279236) * (enclose() + 2.29092 * (distance()) + 1.71383) - (0.0103811 * (distance()) + 0.130868) * (enclose() + 1.60602 * (distance()) + 1.34047) * (enclose() + 1.60602 * (distance()) + 1.34047)))
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() >= distance())) {
        C = length() * 0.0312459 * (1 - exp(-1.28525 * (distance() + -0.0206543)))
    }
    if ((distance() <= 0.0) && (enclose() < max_enclose)) {
        C = length() * 0.0733582 * (0.410216 - exp(1.12679 * (enclose() + 13.1684) - 0.182774 * (enclose() + 9.37057) * (enclose() + 9.37057)) + 0.000265531)
    }
    if (C < 0.0) {
        C = 0
    }
]
//
//  model: 33  target: nearbody  profile: field  layers: field_base,poly,M1,M3
//
CAPACITANCE NEARBODY M1 INSIDE OF poly M3 MASK
[
    PROPERTY C
    max_calwidth = 0.92 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-3.09582 - 1.33323 * (distance())) + 0.00616337 / pow(distance() , 1.37147)) * 1.47506 * pow((width1() + width2()) / 2 , 0.072851)
]
//
//  model: 33  target: crossovere  profile: field  layers: field_base,poly,M1,M3
//
CAPACITANCE CROSSOVER FRINGE M1 M3 INSIDE OF poly MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_calenclose = 5 // For reference
    max_distance = 3
    max_enclose = 3
    C = 0.0
    if ((distance() > 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0111235 * (1 - exp(-0.853953 * (distance() + 0.050972)))
    }
    if ((distance() <= 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0114831
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() < distance())) {
        C = length() * 0.5 * (-0.00038977 * (distance()) + 0.0322195) * (0.678236 - exp(-(-0.00691573 * (distance()) + 0.218711) * (enclose() + -1.2777 * (distance()) + 1.95141) - (0.0224952 * (distance()) + -0.00676267) * (enclose() + -0.108298 * (distance()) + 4.9059) * (enclose() + -0.108298 * (distance()) + 4.9059)))
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() >= distance())) {
        C = length() * 0.0111235 * (1 - exp(-0.853953 * (distance() + 0.050972)))
    }
    if ((distance() <= 0.0) && (enclose() < max_enclose)) {
        C = length() * 0.0151353 * (0.678236 - exp(-0.184132 * (enclose() + -4.43709) - 0.105713 * (enclose() + 4.36441) * (enclose() + 4.36441)))
    }
    if (C < 0.0) {
        C = 0
    }
]
//
//  model: 33  target: intrinsice  profile: field  layers: field_base,poly,M1,M3
//
CAPACITANCE CROSSOVER FRINGE M1 poly INSIDE OF M3 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_calenclose = 5 // For reference
    max_distance = 3
    max_enclose = 3
    C = 0.0
    if ((distance() > 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0374685 * (1 - exp(-0.977876 * (distance() + 0.0412545)))
    }
    if ((distance() <= 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0387089
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() < distance())) {
        C = length() * 0.5 * (0.00134589 * (distance()) + 0.623456) * (0.114471 - exp(-(-0.243065 * (distance()) + 0.208259) * (enclose() + 4.48826 * (distance()) + 6.92082) - (0.00143512 * (distance()) + 0.0529488) * (enclose() + 3.95871 * (distance()) + 3.28718) * (enclose() + 3.95871 * (distance()) + 3.28718)))
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() >= distance())) {
        C = length() * 0.0374685 * (1 - exp(-0.977876 * (distance() + 0.0412545)))
    }
    if ((distance() <= 0.0) && (enclose() < max_enclose)) {
        C = length() * 0.315093 * (0.114471 - exp(1.00707 * (enclose() + 29.3621) - 0.0601244 * (enclose() + 23.0807) * (enclose() + 23.0807)) + 0.000974827)
    }
    if (C < 0.0) {
        C = 0
    }
]
//
//  model: 33  target: nearbody  profile: field  layers: field_base,poly,M2,M3
//
CAPACITANCE NEARBODY M2 INSIDE OF poly M3 MASK
[
    PROPERTY C
    max_calwidth = 1.12 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-2.92117 - 1.10851 * (distance())) + 0.00698929 / pow(distance() , 1.42364)) * 1.25086 * pow((width1() + width2()) / 2 , 0.0728985)
]
//
//  model: 33  target: crossovere  profile: field  layers: field_base,poly,M2,M3
//
CAPACITANCE CROSSOVER FRINGE M2 M3 INSIDE OF poly MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_calenclose = 5 // For reference
    max_distance = 3
    max_enclose = 3
    C = 0.0
    if ((distance() > 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.027625 * (1 - exp(-0.743438 * (distance() + 0.044396)))
    }
    if ((distance() <= 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0280018
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() < distance())) {
        C = length() * 0.5 * (-0.00146864 * (distance()) + 0.0705194) * (0.826761 - exp(-(0.0674049 * (distance()) + 1.7649) * (enclose() + -0.142841 * (distance()) + 1.54548) - (0.014094 * (distance()) + -0.197338) * (enclose() + -0.232034 * (distance()) + 3.66989) * (enclose() + -0.232034 * (distance()) + 3.66989)))
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() >= distance())) {
        C = length() * 0.027625 * (1 - exp(-0.743438 * (distance() + 0.044396)))
    }
    if ((distance() <= 0.0) && (enclose() < max_enclose)) {
        C = length() * 0.0315881 * (0.826761 - exp(-2.10192 * (enclose() + 0.831275) - -0.126868 * (enclose() + 2.50972) * (enclose() + 2.50972)))
    }
    if (C < 0.0) {
        C = 0
    }
]
//
//  model: 33  target: intrinsice  profile: field  layers: field_base,poly,M2,M3
//
CAPACITANCE CROSSOVER FRINGE M2 poly INSIDE OF M3 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_calenclose = 5 // For reference
    max_distance = 3
    max_enclose = 3
    C = 0.0
    if ((distance() > 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0159325 * (1 - exp(-0.698092 * (distance() + 0.0513479)))
    }
    if ((distance() <= 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0160916
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() < distance())) {
        C = length() * 0.5 * (5.39817e-05 * (distance()) + 0.0576392) * (0.513718 - exp(-(0.0596289 * (distance()) + 0.524407) * (enclose() + -0.0901782 * (distance()) + 1.47105) - (0.0481732 * (distance()) + -0.101572) * (enclose() + -0.412488 * (distance()) + 1.64202) * (enclose() + -0.412488 * (distance()) + 1.64202)))
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() >= distance())) {
        C = length() * 0.0159325 * (1 - exp(-0.698092 * (distance() + 0.0513479)))
    }
    if ((distance() <= 0.0) && (enclose() < max_enclose)) {
        C = length() * 0.0289546 * (0.513718 - exp(-0.822551 * (enclose() + 1.02016) - 0.139294 * (enclose() + -0.42042) * (enclose() + -0.42042)) + 0.00104638)
    }
    if (C < 0.0) {
        C = 0
    }
]
//
//  model: 33  target: nearbody  profile: field  layers: field_base,M1,M2,M3
//
CAPACITANCE NEARBODY M2 INSIDE OF M1 M3 MASK
[
    PROPERTY C
    max_calwidth = 1.12 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-2.79849 - 1.471 * (distance())) + 0.00355827 / pow(distance() , 1.67108)) * 1.36389 * pow((width1() + width2()) / 2 , 0.0449297)
]
//
//  model: 33  target: crossovere  profile: field  layers: field_base,M1,M2,M3
//
CAPACITANCE CROSSOVER FRINGE M2 M3 INSIDE OF M1 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_calenclose = 5 // For reference
    max_distance = 3
    max_enclose = 3
    C = 0.0
    if ((distance() > 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0225695 * (1 - exp(-0.997452 * (distance() + -0.0191628)))
    }
    if ((distance() <= 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0228883
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() < distance())) {
        C = length() * 0.5 * (-0.00043081 * (distance()) + 0.0724645) * (0.616503 - exp(-(0.0204637 * (distance()) + 1.40714) * (enclose() + 0.0222908 * (distance()) + 0.767727) - (0.0936412 * (distance()) + -0.332903) * (enclose() + -0.271188 * (distance()) + 1.52937) * (enclose() + -0.271188 * (distance()) + 1.52937)))
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() >= distance())) {
        C = length() * 0.0225695 * (1 - exp(-0.997452 * (distance() + -0.0191628)))
    }
    if ((distance() <= 0.0) && (enclose() < max_enclose)) {
        C = length() * 0.0351552 * (0.616503 - exp(-1.50946 * (enclose() + 0.879181) - 0.135303 * (enclose() + 0.17343) * (enclose() + 0.17343)))
    }
    if (C < 0.0) {
        C = 0
    }
]
//
//  model: 33  target: intrinsice  profile: field  layers: field_base,M1,M2,M3
//
CAPACITANCE CROSSOVER FRINGE M2 M1 INSIDE OF M3 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_calenclose = 5 // For reference
    max_distance = 3
    max_enclose = 3
    C = 0.0
    if ((distance() > 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0256173 * (1 - exp(-1.00421 * (distance() + -0.0189359)))
    }
    if ((distance() <= 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0259735
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() < distance())) {
        C = length() * 0.5 * (-0.00163993 * (distance()) + 0.359822) * (0.140953 - exp(-(-0.101371 * (distance()) + 0.0355403) * (enclose() + 10.394 * (distance()) + 16.8479) - (0.00053546 * (distance()) + 0.0323575) * (enclose() + 5.11868 * (distance()) + 5.96964) * (enclose() + 5.11868 * (distance()) + 5.96964)))
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() >= distance())) {
        C = length() * 0.0256173 * (1 - exp(-1.00421 * (distance() + -0.0189359)))
    }
    if ((distance() <= 0.0) && (enclose() < max_enclose)) {
        C = length() * 0.175811 * (0.140953 - exp(0.471315 * (enclose() + 68.8179) - 0.0350348 * (enclose() + 31.563) * (enclose() + 31.563)) + 0.000361433)
    }
    if (C < 0.0) {
        C = 0
    }
]
//
//  model: 14  target: nearbody2  profile: field  layers: field_base,poly,M1
//
CAPACITANCE NEARBODY poly M1 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_distance = 3
    realdistance = distance()
    if (realdistance < 0.01) {
        realdistance = 0.01
    }
    C = length() * (0.0216717 * exp(-3.7562 * realdistance - (0.721479 * realdistance) / realdistance)) / pow(realdistance , 0.0596152)
]
//
//  model: 14  target: nearbody2  profile: field  layers: field_base,poly,M2
//
CAPACITANCE NEARBODY poly M2 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_distance = 3
    realdistance = distance()
    if (realdistance < 0.01) {
        realdistance = 0.01
    }
    C = length() * (0.0941629 * exp(-1.37451 * realdistance - (2.16422 * realdistance) / realdistance)) / pow(realdistance , -0.0243397)
]
//
//  model: 14  target: nearbody2  profile: field  layers: field_base,poly,M3
//
CAPACITANCE NEARBODY poly M3 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_distance = 3
    realdistance = distance()
    if (realdistance < 0.01) {
        realdistance = 0.01
    }
    C = length() * (0.0545415 * exp(-0.776539 * realdistance - (1.7273 * realdistance) / realdistance)) / pow(realdistance , -0.0190462)
]
//
//  model: 14  target: nearbody2  profile: field  layers: field_base,M1,M2
//
CAPACITANCE NEARBODY M1 M2 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_distance = 3
    realdistance = distance()
    if (realdistance < 0.01) {
        realdistance = 0.01
    }
    C = length() * (0.0226628 * exp(-3.38474 * realdistance - (0.441347 * realdistance) / realdistance)) / pow(realdistance , -0.0659465)
]
//
//  model: 14  target: nearbody2  profile: field  layers: field_base,M1,M3
//
CAPACITANCE NEARBODY M1 M3 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_distance = 3
    realdistance = distance()
    if (realdistance < 0.01) {
        realdistance = 0.01
    }
    C = length() * (0.0796302 * exp(-1.14185 * realdistance - (1.98064 * realdistance) / realdistance)) / pow(realdistance , -0.0287488)
]
//
//  model: 14  target: nearbody2  profile: field  layers: field_base,M2,M3
//
CAPACITANCE NEARBODY M2 M3 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_distance = 3
    realdistance = distance()
    if (realdistance < 0.01) {
        realdistance = 0.01
    }
    C = length() * (0.0304776 * exp(-2.98162 * realdistance - (0.497848 * realdistance) / realdistance)) / pow(realdistance , -0.0905392)
]
//
//  model: 2  target: intrinsicp  profile: active  layers: active_base,M1,nsd,psd
//
CAPACITANCE CROSSOVER PLATE M1 nsd MASK
[
    PROPERTY C
    C = 0.0471275 * area()
]
CAPACITANCE CROSSOVER PLATE M1 psd MASK
[
    PROPERTY C
    C = 0.0471275 * area()
]
//
//  model: 2  target: intrinsicp  profile: active  layers: active_base,M2,nsd,psd
//
CAPACITANCE CROSSOVER PLATE M2 nsd MASK
[
    PROPERTY C
    C = 0.0159726 * area()
]
CAPACITANCE CROSSOVER PLATE M2 psd MASK
[
    PROPERTY C
    C = 0.0159726 * area()
]
//
//  model: 2  target: intrinsicp  profile: active  layers: active_base,M3,nsd,psd
//
CAPACITANCE CROSSOVER PLATE M3 nsd MASK
[
    PROPERTY C
    C = 0.0092576 * area()
]
CAPACITANCE CROSSOVER PLATE M3 psd MASK
[
    PROPERTY C
    C = 0.0092576 * area()
]
//
//  model: 34  target: intrinsic  profile: active  layers: active_base,M1,nsd,psd
//
CAPACITANCE CROSSOVER FRINGE M1 nsd MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_distance = 3
    C = 0.0
    if (distance() > 0.0) {
        C = length() * 0.0412543 * (1 - exp(-0.749142 * (distance() + 0.134984)))
    }
    if (distance() <= 0.0) {
        C = length() * 0.0441665
    }
]
CAPACITANCE CROSSOVER FRINGE M1 psd MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_distance = 3
    C = 0.0
    if (distance() > 0.0) {
        C = length() * 0.0412543 * (1 - exp(-0.749142 * (distance() + 0.134984)))
    }
    if (distance() <= 0.0) {
        C = length() * 0.0441665
    }
]
//
//  model: 34  target: nearbody  profile: active  layers: active_base,M1,nsd,psd
//
CAPACITANCE NEARBODY M1 INSIDE OF nsd MASK
[
    PROPERTY C
    max_calwidth = 0.92 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-3.90671 - 1.02723 * (distance())) + 0.0140987 / pow(distance() , 1.00219)) * 1.62396 * pow((width1() + width2()) / 2 , 0.102589)
]
CAPACITANCE NEARBODY M1 INSIDE OF psd MASK
[
    PROPERTY C
    max_calwidth = 0.92 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-3.90671 - 1.02723 * (distance())) + 0.0140987 / pow(distance() , 1.00219)) * 1.62396 * pow((width1() + width2()) / 2 , 0.102589)
]
//
//  model: 34  target: intrinsic  profile: active  layers: active_base,M2,nsd,psd
//
CAPACITANCE CROSSOVER FRINGE M2 nsd MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_distance = 3
    C = 0.0
    if (distance() > 0.0) {
        C = length() * 0.0286998 * (1 - exp(-0.376267 * (distance() + 0.467591)))
    }
    if (distance() <= 0.0) {
        C = length() * 0.0320937
    }
]
CAPACITANCE CROSSOVER FRINGE M2 psd MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_distance = 3
    C = 0.0
    if (distance() > 0.0) {
        C = length() * 0.0286998 * (1 - exp(-0.376267 * (distance() + 0.467591)))
    }
    if (distance() <= 0.0) {
        C = length() * 0.0320937
    }
]
//
//  model: 34  target: nearbody  profile: active  layers: active_base,M2,nsd,psd
//
CAPACITANCE NEARBODY M2 INSIDE OF nsd MASK
[
    PROPERTY C
    max_calwidth = 1.12 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-4.57107 - 0.446798 * (distance())) + 0.0165084 / pow(distance() , 0.867429)) * 1.97962 * pow((width1() + width2()) / 2 , 0.136617)
]
CAPACITANCE NEARBODY M2 INSIDE OF psd MASK
[
    PROPERTY C
    max_calwidth = 1.12 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-4.57107 - 0.446798 * (distance())) + 0.0165084 / pow(distance() , 0.867429)) * 1.97962 * pow((width1() + width2()) / 2 , 0.136617)
]
//
//  model: 34  target: intrinsic  profile: active  layers: active_base,M3,nsd,psd
//
CAPACITANCE CROSSOVER FRINGE M3 nsd MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_distance = 3
    C = 0.0
    if (distance() > 0.0) {
        C = length() * 0.0413837 * (1 - exp(-0.102353 * (distance() + 0.940433)))
    }
    if (distance() <= 0.0) {
        C = length() * 0.030451
    }
]
CAPACITANCE CROSSOVER FRINGE M3 psd MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_distance = 3
    C = 0.0
    if (distance() > 0.0) {
        C = length() * 0.0413837 * (1 - exp(-0.102353 * (distance() + 0.940433)))
    }
    if (distance() <= 0.0) {
        C = length() * 0.030451
    }
]
//
//  model: 34  target: nearbody  profile: active  layers: active_base,M3,nsd,psd
//
CAPACITANCE NEARBODY M3 INSIDE OF nsd MASK
[
    PROPERTY C
    max_calwidth = 1.76 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-3.73479 - 0.357009 * (distance())) + 0.0363501 / pow(distance() , 0.90089)) * 1.47083 * pow((width1() + width2()) / 2 , 0.104589)
]
CAPACITANCE NEARBODY M3 INSIDE OF psd MASK
[
    PROPERTY C
    max_calwidth = 1.76 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-3.73479 - 0.357009 * (distance())) + 0.0363501 / pow(distance() , 0.90089)) * 1.47083 * pow((width1() + width2()) / 2 , 0.104589)
]
//
//  model: 36  target: nearbody  profile: active  layers: active_base,M1,M2,nsd,psd
//
CAPACITANCE NEARBODY M1 INSIDE OF nsd M2 MASK
[
    PROPERTY C
    max_calwidth = 0.92 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-2.5363 - 1.96996 * (distance())) + 1.27316e-08 / pow(distance() , 9.2047)) * 1.86686 * pow((width1() + width2()) / 2 , 0.047527)
]
CAPACITANCE NEARBODY M1 INSIDE OF psd M2 MASK
[
    PROPERTY C
    max_calwidth = 0.92 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-2.5363 - 1.96996 * (distance())) + 1.27316e-08 / pow(distance() , 9.2047)) * 1.86686 * pow((width1() + width2()) / 2 , 0.047527)
]
//
//  model: 36  target: crossovere  profile: active  layers: active_base,M1,M2,nsd,psd
//
CAPACITANCE CROSSOVER FRINGE M1 M2 INSIDE OF nsd MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_calenclose = 5 // For reference
    max_distance = 3
    max_enclose = 3
    C = 0.0
    if ((distance() > 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0234856 * (1 - exp(-1.10611 * (distance() + -0.0136745)))
    }
    if ((distance() <= 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0239021
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() < distance())) {
        C = length() * 0.5 * (-0.00104712 * (distance()) + 0.15763) * (0.297589 - exp(-(-0.011774 * (distance()) + 0.00015292) * (enclose() + 25.367 * (distance()) + 1.7644) - (0.0152509 * (distance()) + 0.0503219) * (enclose() + 0.830919 * (distance()) + 4.48788) * (enclose() + 0.830919 * (distance()) + 4.48788)))
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() >= distance())) {
        C = length() * 0.0234856 * (1 - exp(-1.10611 * (distance() + -0.0136745)))
    }
    if ((distance() <= 0.0) && (enclose() < max_enclose)) {
        C = length() * 0.0761972 * (0.297589 - exp(0.0587171 * (enclose() + 128.599) - 0.126576 * (enclose() + 8.64247) * (enclose() + 8.64247)))
    }
    if (C < 0.0) {
        C = 0
    }
]
CAPACITANCE CROSSOVER FRINGE M1 M2 INSIDE OF psd MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_calenclose = 5 // For reference
    max_distance = 3
    max_enclose = 3
    C = 0.0
    if ((distance() > 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0234856 * (1 - exp(-1.10611 * (distance() + -0.0136745)))
    }
    if ((distance() <= 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0239021
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() < distance())) {
        C = length() * 0.5 * (-0.00104712 * (distance()) + 0.15763) * (0.297589 - exp(-(-0.011774 * (distance()) + 0.00015292) * (enclose() + 25.367 * (distance()) + 1.7644) - (0.0152509 * (distance()) + 0.0503219) * (enclose() + 0.830919 * (distance()) + 4.48788) * (enclose() + 0.830919 * (distance()) + 4.48788)))
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() >= distance())) {
        C = length() * 0.0234856 * (1 - exp(-1.10611 * (distance() + -0.0136745)))
    }
    if ((distance() <= 0.0) && (enclose() < max_enclose)) {
        C = length() * 0.0761972 * (0.297589 - exp(0.0587171 * (enclose() + 128.599) - 0.126576 * (enclose() + 8.64247) * (enclose() + 8.64247)))
    }
    if (C < 0.0) {
        C = 0
    }
]
//
//  model: 36  target: intrinsic  profile: active  layers: active_base,M1,M2,nsd,psd
//
CAPACITANCE CROSSOVER FRINGE M1 nsd INSIDE OF M2 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_distance = 3
    C = 0.0
    if (distance() > 0.0) {
        C = length() * 0.0271458 * (1 - exp(-1.11118 * (distance() + -0.00915558)))
    }
    if (distance() <= 0.0) {
        C = length() * 0.0276931
    }
]
CAPACITANCE CROSSOVER FRINGE M1 psd INSIDE OF M2 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_distance = 3
    C = 0.0
    if (distance() > 0.0) {
        C = length() * 0.0271458 * (1 - exp(-1.11118 * (distance() + -0.00915558)))
    }
    if (distance() <= 0.0) {
        C = length() * 0.0276931
    }
]
//
//  model: 36  target: nearbody  profile: active  layers: active_base,M1,M3,nsd,psd
//
CAPACITANCE NEARBODY M1 INSIDE OF nsd M3 MASK
[
    PROPERTY C
    max_calwidth = 0.92 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-3.10837 - 1.19686 * (distance())) + 0.006741 / pow(distance() , 1.34183)) * 1.46843 * pow((width1() + width2()) / 2 , 0.0789553)
]
CAPACITANCE NEARBODY M1 INSIDE OF psd M3 MASK
[
    PROPERTY C
    max_calwidth = 0.92 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-3.10837 - 1.19686 * (distance())) + 0.006741 / pow(distance() , 1.34183)) * 1.46843 * pow((width1() + width2()) / 2 , 0.0789553)
]
//
//  model: 36  target: crossovere  profile: active  layers: active_base,M1,M3,nsd,psd
//
CAPACITANCE CROSSOVER FRINGE M1 M3 INSIDE OF nsd MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_calenclose = 5 // For reference
    max_distance = 3
    max_enclose = 3
    C = 0.0
    if ((distance() > 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0122549 * (1 - exp(-0.751149 * (distance() + 0.071659)))
    }
    if ((distance() <= 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0125544
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() < distance())) {
        C = length() * 0.5 * (-0.00011252 * (distance()) + 0.0298703) * (0.824293 - exp(-(0.325483 * (distance()) + 0.193903) * (enclose() + 0.239609 * (distance()) + 0.632036) - (-0.0120021 * (distance()) + -0.0195602) * (enclose() + 0.813185 * (distance()) + 1.53818) * (enclose() + 0.813185 * (distance()) + 1.53818)))
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() >= distance())) {
        C = length() * 0.0122549 * (1 - exp(-0.751149 * (distance() + 0.071659)))
    }
    if ((distance() <= 0.0) && (enclose() < max_enclose)) {
        C = length() * 0.0146538 * (0.824293 - exp(-1.82132 * (enclose() + 1.83008) - -0.0795707 * (enclose() + 5.60411) * (enclose() + 5.60411)))
    }
    if (C < 0.0) {
        C = 0
    }
]
CAPACITANCE CROSSOVER FRINGE M1 M3 INSIDE OF psd MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_calenclose = 5 // For reference
    max_distance = 3
    max_enclose = 3
    C = 0.0
    if ((distance() > 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0122549 * (1 - exp(-0.751149 * (distance() + 0.071659)))
    }
    if ((distance() <= 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0125544
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() < distance())) {
        C = length() * 0.5 * (-0.00011252 * (distance()) + 0.0298703) * (0.824293 - exp(-(0.325483 * (distance()) + 0.193903) * (enclose() + 0.239609 * (distance()) + 0.632036) - (-0.0120021 * (distance()) + -0.0195602) * (enclose() + 0.813185 * (distance()) + 1.53818) * (enclose() + 0.813185 * (distance()) + 1.53818)))
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() >= distance())) {
        C = length() * 0.0122549 * (1 - exp(-0.751149 * (distance() + 0.071659)))
    }
    if ((distance() <= 0.0) && (enclose() < max_enclose)) {
        C = length() * 0.0146538 * (0.824293 - exp(-1.82132 * (enclose() + 1.83008) - -0.0795707 * (enclose() + 5.60411) * (enclose() + 5.60411)))
    }
    if (C < 0.0) {
        C = 0
    }
]
//
//  model: 36  target: intrinsic  profile: active  layers: active_base,M1,M3,nsd,psd
//
CAPACITANCE CROSSOVER FRINGE M1 nsd INSIDE OF M3 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_distance = 3
    C = 0.0
    if (distance() > 0.0) {
        C = length() * 0.0333987 * (1 - exp(-0.829298 * (distance() + 0.0585192)))
    }
    if (distance() <= 0.0) {
        C = length() * 0.0343277
    }
]
CAPACITANCE CROSSOVER FRINGE M1 psd INSIDE OF M3 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_distance = 3
    C = 0.0
    if (distance() > 0.0) {
        C = length() * 0.0333987 * (1 - exp(-0.829298 * (distance() + 0.0585192)))
    }
    if (distance() <= 0.0) {
        C = length() * 0.0343277
    }
]
//
//  model: 36  target: nearbody  profile: active  layers: active_base,M2,M3,nsd,psd
//
CAPACITANCE NEARBODY M2 INSIDE OF nsd M3 MASK
[
    PROPERTY C
    max_calwidth = 1.12 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-2.88841 - 1.0743 * (distance())) + 0.00801649 / pow(distance() , 1.39294)) * 1.17149 * pow((width1() + width2()) / 2 , 0.0766613)
]
CAPACITANCE NEARBODY M2 INSIDE OF psd M3 MASK
[
    PROPERTY C
    max_calwidth = 1.12 // For reference
    max_caldistance = 5 // For reference
    max_width = 3
    max_distance = 3
    C = length() * (exp(-2.88841 - 1.0743 * (distance())) + 0.00801649 / pow(distance() , 1.39294)) * 1.17149 * pow((width1() + width2()) / 2 , 0.0766613)
]
//
//  model: 36  target: crossovere  profile: active  layers: active_base,M2,M3,nsd,psd
//
CAPACITANCE CROSSOVER FRINGE M2 M3 INSIDE OF nsd MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_calenclose = 5 // For reference
    max_distance = 3
    max_enclose = 3
    C = 0.0
    if ((distance() > 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0281746 * (1 - exp(-0.723457 * (distance() + 0.0542423)))
    }
    if ((distance() <= 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0286285
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() < distance())) {
        C = length() * 0.5 * (0.00270388 * (distance()) + 0.0732403) * (0.621893 - exp(-(0.0762704 * (distance()) + 0.468997) * (enclose() + -0.114962 * (distance()) + 1.17463) - (0.0185696 * (distance()) + -0.010813) * (enclose() + -0.397344 * (distance()) + 4.9821) * (enclose() + -0.397344 * (distance()) + 4.9821)))
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() >= distance())) {
        C = length() * 0.0281746 * (1 - exp(-0.723457 * (distance() + 0.0542423)))
    }
    if ((distance() <= 0.0) && (enclose() < max_enclose)) {
        C = length() * 0.0433798 * (0.621893 - exp(-0.850349 * (enclose() + 0.59982) - 0.082035 * (enclose() + 2.99538) * (enclose() + 2.99538)))
    }
    if (C < 0.0) {
        C = 0
    }
]
CAPACITANCE CROSSOVER FRINGE M2 M3 INSIDE OF psd MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_calenclose = 5 // For reference
    max_distance = 3
    max_enclose = 3
    C = 0.0
    if ((distance() > 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0281746 * (1 - exp(-0.723457 * (distance() + 0.0542423)))
    }
    if ((distance() <= 0.0) && (enclose() >= max_enclose)) {
        C = length() * 0.0286285
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() < distance())) {
        C = length() * 0.5 * (0.00270388 * (distance()) + 0.0732403) * (0.621893 - exp(-(0.0762704 * (distance()) + 0.468997) * (enclose() + -0.114962 * (distance()) + 1.17463) - (0.0185696 * (distance()) + -0.010813) * (enclose() + -0.397344 * (distance()) + 4.9821) * (enclose() + -0.397344 * (distance()) + 4.9821)))
    }
    if ((distance() > 0.0) && (enclose() < max_enclose) && (enclose() >= distance())) {
        C = length() * 0.0281746 * (1 - exp(-0.723457 * (distance() + 0.0542423)))
    }
    if ((distance() <= 0.0) && (enclose() < max_enclose)) {
        C = length() * 0.0433798 * (0.621893 - exp(-0.850349 * (enclose() + 0.59982) - 0.082035 * (enclose() + 2.99538) * (enclose() + 2.99538)))
    }
    if (C < 0.0) {
        C = 0
    }
]
//
//  model: 36  target: intrinsic  profile: active  layers: active_base,M2,M3,nsd,psd
//
CAPACITANCE CROSSOVER FRINGE M2 nsd INSIDE OF M3 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_distance = 3
    C = 0.0
    if (distance() > 0.0) {
        C = length() * 0.015019 * (1 - exp(-0.675202 * (distance() + 0.0635434)))
    }
    if (distance() <= 0.0) {
        C = length() * 0.0151939
    }
]
CAPACITANCE CROSSOVER FRINGE M2 psd INSIDE OF M3 MASK
[
    PROPERTY C
    max_caldistance = 5 // For reference
    max_distance = 3
    C = 0.0
    if (distance() > 0.0) {
        C = length() * 0.015019 * (1 - exp(-0.675202 * (distance() + 0.0635434)))
    }
    if (distance() <= 0.0) {
        C = length() * 0.0151939
    }
]

RESISTANCE SHEET poly [ 7.960 0 ]
RESISTANCE SHEET M1   [ 0.078 0 ]
RESISTANCE SHEET M2   [ 0.078 0 ]
RESISTANCE SHEET M3   [ 0.078 0 ]
RESISTANCE SHEET nsd  [ 7.080 0 ]
RESISTANCE SHEET psd  [ 7.830 0 ]
CAPACITANCE ORDER nsd psd poly M1 M2 M3 
RESISTANCE CONNECTION M1 nsd  [ 0.31944 0 ]
RESISTANCE CONNECTION M1 psd  [ 0.43076 0 ]
RESISTANCE CONNECTION M1 poly [ 0.31460 0 ]
RESISTANCE CONNECTION M2 M1   [ 0.32448 0 ]
RESISTANCE CONNECTION M3 M2   [ 0.48600 0 ]
~

